/*
 * Service_01_User_API
 * Remembranza Project is a response to the need of dealing with mental diseases in advanced ages
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mjesusaz@alumnos.unex.es
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;


import java.util.Objects;


import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;



import javax.validation.constraints.*;




/**
 * AchievementItem
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaJerseyServerCodegen", date = "2018-11-23T18:06:22.527Z[GMT]")
public class AchievementItem   {
  
    
      
  
  @JsonProperty("id_achievement")
  
  
  
  
  private UUID idAchievement = null;
  

  
    
      
  
  @JsonProperty("title")
  
  
  
  
  private String title = null;
  

  
    
      
  
  @JsonProperty("description")
  
  
  
  
  private String description = null;
  

  
    
      
  
  @JsonProperty("won")
  
  
  
  
  private Boolean won = null;
  

  
  
  
  public AchievementItem idAchievement(UUID idAchievement) {
    this.idAchievement = idAchievement;
    return this;
  }
  
  

  
  /**
  
  
   * Get idAchievement
  
  
  
   * @return idAchievement
   **/
 
  
  @JsonProperty("id_achievement")
  
  @ApiModelProperty(example = "d290f1ee-6c54-4b01-90e6-d701748f0851", required = true, value = "")

  @NotNull

  public UUID getIdAchievement() {
    return idAchievement;
  }
  

  public void setIdAchievement(UUID idAchievement) {
    this.idAchievement = idAchievement;
  }
  

  
  
  public AchievementItem title(String title) {
    this.title = title;
    return this;
  }
  
  

  
  /**
  
  
   * Get title
  
  
  
   * @return title
   **/
 
  
  @JsonProperty("title")
  
  @ApiModelProperty(example = "The Roller", required = true, value = "")

  @NotNull

  public String getTitle() {
    return title;
  }
  

  public void setTitle(String title) {
    this.title = title;
  }
  

  
  
  public AchievementItem description(String description) {
    this.description = description;
    return this;
  }
  
  

  
  /**
  
  
   * Get description
  
  
  
   * @return description
   **/
 
  
  @JsonProperty("description")
  
  @ApiModelProperty(example = "You have walked 50 km during this time", required = true, value = "")

  @NotNull

  public String getDescription() {
    return description;
  }
  

  public void setDescription(String description) {
    this.description = description;
  }
  

  
  
  public AchievementItem won(Boolean won) {
    this.won = won;
    return this;
  }
  
  

  
  /**
  
  
   * Get won
  
  
  
   * @return won
   **/
 
  
  @JsonProperty("won")
  
  @ApiModelProperty(required = true, value = "")

  @NotNull

  public Boolean isisWon() {
    return won;
  }
  

  public void setWon(Boolean won) {
    this.won = won;
  }
  

  


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AchievementItem achievementItem = (AchievementItem) o;
    return Objects.equals(this.idAchievement, achievementItem.idAchievement) &&
        Objects.equals(this.title, achievementItem.title) &&
        Objects.equals(this.description, achievementItem.description) &&
        Objects.equals(this.won, achievementItem.won);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idAchievement, title, description, won);
  }




  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AchievementItem {\n");
    
    sb.append("    idAchievement: ").append(toIndentedString(idAchievement)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    won: ").append(toIndentedString(won)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}



